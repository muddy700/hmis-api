{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "HIMS APIs",
    "description": "APIs for Healthcare Information Management System(HIMS)."
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": " Testing",
      "description": "REST API-Endpoint for testing connectivity"
    },
    {
      "name": "Role",
      "description": "REST API for Roles"
    },
    {
      "name": "User",
      "description": "REST API for Users"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "multiparty/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/test": {
      "get": {
        "tags": [
          " Testing"
        ],
        "summary": "Get greeting text",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "description": "Your Name",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "List all roles",
        "description": "Get all roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create a new role",
        "description": "Create new role",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get a role by id",
        "description": "Get single role by role_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Role id."
          }
        ],
        "responses": {
          "200": {
            "description": "Roles retrieved successfull.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Role"
        ],
        "summary": "Update a role",
        "description": "Edit single role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Delete a role by id",
        "description": "Delete single role by role_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create new user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User Info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get single user by user_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfull.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Edit single user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User Info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete single user by user_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Role": {
      "type": "object",
      "properties": {
        "role_name": {
          "type": "string",
          "example": "Administrator"
        }
      },
      "required": [
        "role_name"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "John"
        },
        "last_name": {
          "type": "string",
          "example": "Doe"
        },
        "username": {
          "type": "string",
          "example": "jdoe"
        },
        "gender": {
          "type": "string",
          "example": "male"
        },
        "dob": {
          "type": "string",
          "example": "2010-02-25"
        },
        "phone": {
          "type": "string",
          "example": "0789101112"
        },
        "email": {
          "type": "string",
          "example": "jdoe@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "status": {
          "type": "boolean",
          "example": true
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "example": "kingugi"
            },
            "city": {
              "type": "string",
              "example": "Dar es salaam"
            },
            "state": {
              "type": "string",
              "example": "Tanzania"
            },
            "postal_code": {
              "type": "string",
              "example": "123 Tza"
            }
          }
        }
      }
    }
  }
}